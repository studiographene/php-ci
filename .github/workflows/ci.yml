name: studiographene-ci

on:
  workflow_call:
    inputs:
      # project_name is not used in the workflow, kept for backwards compatibility.
      project_name:
        type: string
        default: "sg-ci"
      excluded_jobs:
        type: string
        default: ""
      package_manager:
        type: string
        default: "npm"
      npm_token:
        type: string
        default: ""
      build_command:
        type: string
        default: "npm run build"
      docker_build_command:
        type: string
        default: ""
      docker_build_image_id:
        description: "Docker image ID as mentioned in docker_build_command"
        type: string
        default: "local:latest"
      semgrep_options:
        type: string
        default: ""
      docker_before_step_command:
        type: string
        default: ""
      docker_after_step_command:
        type: string
        default: ""
      pr_agent_before_step_command:
        type: string
        default: ""
      pr_agent_after_step_command:
        type: string
        default: ""
      security_scan_before_step_command:
        type: string
        default: ""
      security_scan_after_step_command:
        type: string
        default: ""

jobs:
  call_workflow:
    uses: studiographene/github-action-workflows/.github/workflows/php-ci.yml@master # if you want alternatively pin to tag version version
    with:
      excluded_jobs: ${{ inputs.excluded_jobs }}
      docker_build_command: ${{ inputs.docker_build_command }}
      docker_build_image_id: ${{ inputs.docker_build_image_id }}
      allowedLicenses: ${{ inputs.allowedLicenses }}
      semgrep_options: ${{ inputs.semgrep_options }}
      security_scan_before_step_command: ${{ inputs.security_scan_before_step_command }}
      security_scan_after_step_command: ${{ inputs.security_scan_after_step_command }}
      pr_agent_before_step_command: ${{ inputs.pr_agent_before_step_command }}
      pr_agent_after_step_command: ${{ inputs.pr_agent_after_step_command }}
      container_scan_before_step_command: ${{ inputs.docker_before_step_command }}
      container_scan_after_step_command: ${{ inputs.docker_after_step_command }}
    secrets: inherit
    permissions: write-all
